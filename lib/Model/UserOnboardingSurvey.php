<?php
/**
 * UserOnboardingSurvey
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  Bitly
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Bitly API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: api@bitly.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.2.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Bitly\Model;

use \ArrayAccess;
use \Bitly\ObjectSerializer;

/**
 * UserOnboardingSurvey Class Doc Comment
 *
 * @category Class
 * @package  Bitly
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class UserOnboardingSurvey implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'UserOnboardingSurvey';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'first_name' => 'string',
        'last_name' => 'string',
        'created' => 'string',
        'modified' => 'string',
        'company_size' => 'string',
        'organization_name' => 'string',
        'use_cases' => 'string[]',
        'version' => 'float',
        'use_cases_other' => 'string[]',
        'department' => 'string',
        'login' => 'string',
        'job_title' => 'string',
        'department_other' => 'string',
        'team_type' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'first_name' => null,
        'last_name' => null,
        'created' => null,
        'modified' => null,
        'company_size' => null,
        'organization_name' => null,
        'use_cases' => null,
        'version' => null,
        'use_cases_other' => null,
        'department' => null,
        'login' => null,
        'job_title' => null,
        'department_other' => null,
        'team_type' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'first_name' => 'first_name',
        'last_name' => 'last_name',
        'created' => 'created',
        'modified' => 'modified',
        'company_size' => 'company_size',
        'organization_name' => 'organization_name',
        'use_cases' => 'use_cases',
        'version' => 'version',
        'use_cases_other' => 'use_cases_other',
        'department' => 'department',
        'login' => 'login',
        'job_title' => 'job_title',
        'department_other' => 'department_other',
        'team_type' => 'team_type'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'first_name' => 'setFirstName',
        'last_name' => 'setLastName',
        'created' => 'setCreated',
        'modified' => 'setModified',
        'company_size' => 'setCompanySize',
        'organization_name' => 'setOrganizationName',
        'use_cases' => 'setUseCases',
        'version' => 'setVersion',
        'use_cases_other' => 'setUseCasesOther',
        'department' => 'setDepartment',
        'login' => 'setLogin',
        'job_title' => 'setJobTitle',
        'department_other' => 'setDepartmentOther',
        'team_type' => 'setTeamType'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'first_name' => 'getFirstName',
        'last_name' => 'getLastName',
        'created' => 'getCreated',
        'modified' => 'getModified',
        'company_size' => 'getCompanySize',
        'organization_name' => 'getOrganizationName',
        'use_cases' => 'getUseCases',
        'version' => 'getVersion',
        'use_cases_other' => 'getUseCasesOther',
        'department' => 'getDepartment',
        'login' => 'getLogin',
        'job_title' => 'getJobTitle',
        'department_other' => 'getDepartmentOther',
        'team_type' => 'getTeamType'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['first_name'] = $data['first_name'] ?? null;
        $this->container['last_name'] = $data['last_name'] ?? null;
        $this->container['created'] = $data['created'] ?? null;
        $this->container['modified'] = $data['modified'] ?? null;
        $this->container['company_size'] = $data['company_size'] ?? null;
        $this->container['organization_name'] = $data['organization_name'] ?? null;
        $this->container['use_cases'] = $data['use_cases'] ?? null;
        $this->container['version'] = $data['version'] ?? null;
        $this->container['use_cases_other'] = $data['use_cases_other'] ?? null;
        $this->container['department'] = $data['department'] ?? null;
        $this->container['login'] = $data['login'] ?? null;
        $this->container['job_title'] = $data['job_title'] ?? null;
        $this->container['department_other'] = $data['department_other'] ?? null;
        $this->container['team_type'] = $data['team_type'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets first_name
     *
     * @return string|null
     */
    public function getFirstName()
    {
        return $this->container['first_name'];
    }

    /**
     * Sets first_name
     *
     * @param string|null $first_name first_name
     *
     * @return self
     */
    public function setFirstName($first_name)
    {
        $this->container['first_name'] = $first_name;

        return $this;
    }

    /**
     * Gets last_name
     *
     * @return string|null
     */
    public function getLastName()
    {
        return $this->container['last_name'];
    }

    /**
     * Sets last_name
     *
     * @param string|null $last_name last_name
     *
     * @return self
     */
    public function setLastName($last_name)
    {
        $this->container['last_name'] = $last_name;

        return $this;
    }

    /**
     * Gets created
     *
     * @return string|null
     */
    public function getCreated()
    {
        return $this->container['created'];
    }

    /**
     * Sets created
     *
     * @param string|null $created created
     *
     * @return self
     */
    public function setCreated($created)
    {
        $this->container['created'] = $created;

        return $this;
    }

    /**
     * Gets modified
     *
     * @return string|null
     */
    public function getModified()
    {
        return $this->container['modified'];
    }

    /**
     * Sets modified
     *
     * @param string|null $modified modified
     *
     * @return self
     */
    public function setModified($modified)
    {
        $this->container['modified'] = $modified;

        return $this;
    }

    /**
     * Gets company_size
     *
     * @return string|null
     */
    public function getCompanySize()
    {
        return $this->container['company_size'];
    }

    /**
     * Sets company_size
     *
     * @param string|null $company_size company_size
     *
     * @return self
     */
    public function setCompanySize($company_size)
    {
        $this->container['company_size'] = $company_size;

        return $this;
    }

    /**
     * Gets organization_name
     *
     * @return string|null
     */
    public function getOrganizationName()
    {
        return $this->container['organization_name'];
    }

    /**
     * Sets organization_name
     *
     * @param string|null $organization_name organization_name
     *
     * @return self
     */
    public function setOrganizationName($organization_name)
    {
        $this->container['organization_name'] = $organization_name;

        return $this;
    }

    /**
     * Gets use_cases
     *
     * @return string[]|null
     */
    public function getUseCases()
    {
        return $this->container['use_cases'];
    }

    /**
     * Sets use_cases
     *
     * @param string[]|null $use_cases use_cases
     *
     * @return self
     */
    public function setUseCases($use_cases)
    {
        $this->container['use_cases'] = $use_cases;

        return $this;
    }

    /**
     * Gets version
     *
     * @return float|null
     */
    public function getVersion()
    {
        return $this->container['version'];
    }

    /**
     * Sets version
     *
     * @param float|null $version version
     *
     * @return self
     */
    public function setVersion($version)
    {
        $this->container['version'] = $version;

        return $this;
    }

    /**
     * Gets use_cases_other
     *
     * @return string[]|null
     */
    public function getUseCasesOther()
    {
        return $this->container['use_cases_other'];
    }

    /**
     * Sets use_cases_other
     *
     * @param string[]|null $use_cases_other use_cases_other
     *
     * @return self
     */
    public function setUseCasesOther($use_cases_other)
    {
        $this->container['use_cases_other'] = $use_cases_other;

        return $this;
    }

    /**
     * Gets department
     *
     * @return string|null
     */
    public function getDepartment()
    {
        return $this->container['department'];
    }

    /**
     * Sets department
     *
     * @param string|null $department department
     *
     * @return self
     */
    public function setDepartment($department)
    {
        $this->container['department'] = $department;

        return $this;
    }

    /**
     * Gets login
     *
     * @return string|null
     */
    public function getLogin()
    {
        return $this->container['login'];
    }

    /**
     * Sets login
     *
     * @param string|null $login login
     *
     * @return self
     */
    public function setLogin($login)
    {
        $this->container['login'] = $login;

        return $this;
    }

    /**
     * Gets job_title
     *
     * @return string|null
     */
    public function getJobTitle()
    {
        return $this->container['job_title'];
    }

    /**
     * Sets job_title
     *
     * @param string|null $job_title job_title
     *
     * @return self
     */
    public function setJobTitle($job_title)
    {
        $this->container['job_title'] = $job_title;

        return $this;
    }

    /**
     * Gets department_other
     *
     * @return string|null
     */
    public function getDepartmentOther()
    {
        return $this->container['department_other'];
    }

    /**
     * Sets department_other
     *
     * @param string|null $department_other department_other
     *
     * @return self
     */
    public function setDepartmentOther($department_other)
    {
        $this->container['department_other'] = $department_other;

        return $this;
    }

    /**
     * Gets team_type
     *
     * @return string|null
     */
    public function getTeamType()
    {
        return $this->container['team_type'];
    }

    /**
     * Sets team_type
     *
     * @param string|null $team_type team_type
     *
     * @return self
     */
    public function setTeamType($team_type)
    {
        $this->container['team_type'] = $team_type;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}



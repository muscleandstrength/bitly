<?php
/**
 * Tier
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Bitly API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: api@bitly.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.2.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * Tier Class Doc Comment
 *
 * @category Class
 * @description a single tier
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class Tier implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'Tier';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'display_name' => 'string',
        'name' => 'string',
        'family' => 'string',
        'price' => 'int',
        'billing_period_type' => 'string',
        'consumable_features' => '\OpenAPI\Client\Model\DefaultConsumableFeature[]',
        'sort_order' => 'int',
        'is_self_service' => 'bool',
        'access_features' => '\OpenAPI\Client\Model\DefaultAccessFeature[]',
        'display_icon' => 'string',
        'is_paid' => 'bool',
        'description' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'display_name' => null,
        'name' => null,
        'family' => null,
        'price' => null,
        'billing_period_type' => null,
        'consumable_features' => null,
        'sort_order' => null,
        'is_self_service' => null,
        'access_features' => null,
        'display_icon' => null,
        'is_paid' => null,
        'description' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'display_name' => 'display_name',
        'name' => 'name',
        'family' => 'family',
        'price' => 'price',
        'billing_period_type' => 'billing_period_type',
        'consumable_features' => 'consumable_features',
        'sort_order' => 'sort_order',
        'is_self_service' => 'is_self_service',
        'access_features' => 'access_features',
        'display_icon' => 'display_icon',
        'is_paid' => 'is_paid',
        'description' => 'description'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'display_name' => 'setDisplayName',
        'name' => 'setName',
        'family' => 'setFamily',
        'price' => 'setPrice',
        'billing_period_type' => 'setBillingPeriodType',
        'consumable_features' => 'setConsumableFeatures',
        'sort_order' => 'setSortOrder',
        'is_self_service' => 'setIsSelfService',
        'access_features' => 'setAccessFeatures',
        'display_icon' => 'setDisplayIcon',
        'is_paid' => 'setIsPaid',
        'description' => 'setDescription'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'display_name' => 'getDisplayName',
        'name' => 'getName',
        'family' => 'getFamily',
        'price' => 'getPrice',
        'billing_period_type' => 'getBillingPeriodType',
        'consumable_features' => 'getConsumableFeatures',
        'sort_order' => 'getSortOrder',
        'is_self_service' => 'getIsSelfService',
        'access_features' => 'getAccessFeatures',
        'display_icon' => 'getDisplayIcon',
        'is_paid' => 'getIsPaid',
        'description' => 'getDescription'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['display_name'] = $data['display_name'] ?? null;
        $this->container['name'] = $data['name'] ?? null;
        $this->container['family'] = $data['family'] ?? null;
        $this->container['price'] = $data['price'] ?? null;
        $this->container['billing_period_type'] = $data['billing_period_type'] ?? null;
        $this->container['consumable_features'] = $data['consumable_features'] ?? null;
        $this->container['sort_order'] = $data['sort_order'] ?? null;
        $this->container['is_self_service'] = $data['is_self_service'] ?? null;
        $this->container['access_features'] = $data['access_features'] ?? null;
        $this->container['display_icon'] = $data['display_icon'] ?? null;
        $this->container['is_paid'] = $data['is_paid'] ?? null;
        $this->container['description'] = $data['description'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets display_name
     *
     * @return string|null
     */
    public function getDisplayName()
    {
        return $this->container['display_name'];
    }

    /**
     * Sets display_name
     *
     * @param string|null $display_name display_name
     *
     * @return self
     */
    public function setDisplayName($display_name)
    {
        $this->container['display_name'] = $display_name;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string|null
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string|null $name name
     *
     * @return self
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets family
     *
     * @return string|null
     */
    public function getFamily()
    {
        return $this->container['family'];
    }

    /**
     * Sets family
     *
     * @param string|null $family family
     *
     * @return self
     */
    public function setFamily($family)
    {
        $this->container['family'] = $family;

        return $this;
    }

    /**
     * Gets price
     *
     * @return int|null
     */
    public function getPrice()
    {
        return $this->container['price'];
    }

    /**
     * Sets price
     *
     * @param int|null $price price
     *
     * @return self
     */
    public function setPrice($price)
    {
        $this->container['price'] = $price;

        return $this;
    }

    /**
     * Gets billing_period_type
     *
     * @return string|null
     */
    public function getBillingPeriodType()
    {
        return $this->container['billing_period_type'];
    }

    /**
     * Sets billing_period_type
     *
     * @param string|null $billing_period_type billing_period_type
     *
     * @return self
     */
    public function setBillingPeriodType($billing_period_type)
    {
        $this->container['billing_period_type'] = $billing_period_type;

        return $this;
    }

    /**
     * Gets consumable_features
     *
     * @return \OpenAPI\Client\Model\DefaultConsumableFeature[]|null
     */
    public function getConsumableFeatures()
    {
        return $this->container['consumable_features'];
    }

    /**
     * Sets consumable_features
     *
     * @param \OpenAPI\Client\Model\DefaultConsumableFeature[]|null $consumable_features consumable_features
     *
     * @return self
     */
    public function setConsumableFeatures($consumable_features)
    {
        $this->container['consumable_features'] = $consumable_features;

        return $this;
    }

    /**
     * Gets sort_order
     *
     * @return int|null
     */
    public function getSortOrder()
    {
        return $this->container['sort_order'];
    }

    /**
     * Sets sort_order
     *
     * @param int|null $sort_order sort_order
     *
     * @return self
     */
    public function setSortOrder($sort_order)
    {
        $this->container['sort_order'] = $sort_order;

        return $this;
    }

    /**
     * Gets is_self_service
     *
     * @return bool|null
     */
    public function getIsSelfService()
    {
        return $this->container['is_self_service'];
    }

    /**
     * Sets is_self_service
     *
     * @param bool|null $is_self_service is_self_service
     *
     * @return self
     */
    public function setIsSelfService($is_self_service)
    {
        $this->container['is_self_service'] = $is_self_service;

        return $this;
    }

    /**
     * Gets access_features
     *
     * @return \OpenAPI\Client\Model\DefaultAccessFeature[]|null
     */
    public function getAccessFeatures()
    {
        return $this->container['access_features'];
    }

    /**
     * Sets access_features
     *
     * @param \OpenAPI\Client\Model\DefaultAccessFeature[]|null $access_features access_features
     *
     * @return self
     */
    public function setAccessFeatures($access_features)
    {
        $this->container['access_features'] = $access_features;

        return $this;
    }

    /**
     * Gets display_icon
     *
     * @return string|null
     */
    public function getDisplayIcon()
    {
        return $this->container['display_icon'];
    }

    /**
     * Sets display_icon
     *
     * @param string|null $display_icon display_icon
     *
     * @return self
     */
    public function setDisplayIcon($display_icon)
    {
        $this->container['display_icon'] = $display_icon;

        return $this;
    }

    /**
     * Gets is_paid
     *
     * @return bool|null
     */
    public function getIsPaid()
    {
        return $this->container['is_paid'];
    }

    /**
     * Sets is_paid
     *
     * @param bool|null $is_paid is_paid
     *
     * @return self
     */
    public function setIsPaid($is_paid)
    {
        $this->container['is_paid'] = $is_paid;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string|null
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string|null $description description
     *
     * @return self
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}



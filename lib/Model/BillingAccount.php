<?php
/**
 * BillingAccount
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Bitly API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: api@bitly.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.2.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * BillingAccount Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class BillingAccount implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'BillingAccount';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'last_four_digits' => 'string',
        'subscription_price' => 'float',
        'billing_info' => '\OpenAPI\Client\Model\BillingInfo',
        'account_id' => 'string',
        'end_date' => 'string',
        'contact_info' => '\OpenAPI\Client\Model\ContactInfo',
        'account_num' => 'string',
        'card_type' => 'string',
        'subscription_status' => 'string',
        'renewal_date' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'last_four_digits' => null,
        'subscription_price' => null,
        'billing_info' => null,
        'account_id' => null,
        'end_date' => null,
        'contact_info' => null,
        'account_num' => null,
        'card_type' => null,
        'subscription_status' => null,
        'renewal_date' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'last_four_digits' => 'last_four_digits',
        'subscription_price' => 'subscription_price',
        'billing_info' => 'billing_info',
        'account_id' => 'account_id',
        'end_date' => 'end_date',
        'contact_info' => 'contact_info',
        'account_num' => 'account_num',
        'card_type' => 'card_type',
        'subscription_status' => 'subscription_status',
        'renewal_date' => 'renewal_date'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'last_four_digits' => 'setLastFourDigits',
        'subscription_price' => 'setSubscriptionPrice',
        'billing_info' => 'setBillingInfo',
        'account_id' => 'setAccountId',
        'end_date' => 'setEndDate',
        'contact_info' => 'setContactInfo',
        'account_num' => 'setAccountNum',
        'card_type' => 'setCardType',
        'subscription_status' => 'setSubscriptionStatus',
        'renewal_date' => 'setRenewalDate'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'last_four_digits' => 'getLastFourDigits',
        'subscription_price' => 'getSubscriptionPrice',
        'billing_info' => 'getBillingInfo',
        'account_id' => 'getAccountId',
        'end_date' => 'getEndDate',
        'contact_info' => 'getContactInfo',
        'account_num' => 'getAccountNum',
        'card_type' => 'getCardType',
        'subscription_status' => 'getSubscriptionStatus',
        'renewal_date' => 'getRenewalDate'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['last_four_digits'] = $data['last_four_digits'] ?? null;
        $this->container['subscription_price'] = $data['subscription_price'] ?? null;
        $this->container['billing_info'] = $data['billing_info'] ?? null;
        $this->container['account_id'] = $data['account_id'] ?? null;
        $this->container['end_date'] = $data['end_date'] ?? null;
        $this->container['contact_info'] = $data['contact_info'] ?? null;
        $this->container['account_num'] = $data['account_num'] ?? null;
        $this->container['card_type'] = $data['card_type'] ?? null;
        $this->container['subscription_status'] = $data['subscription_status'] ?? null;
        $this->container['renewal_date'] = $data['renewal_date'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets last_four_digits
     *
     * @return string|null
     */
    public function getLastFourDigits()
    {
        return $this->container['last_four_digits'];
    }

    /**
     * Sets last_four_digits
     *
     * @param string|null $last_four_digits last_four_digits
     *
     * @return self
     */
    public function setLastFourDigits($last_four_digits)
    {
        $this->container['last_four_digits'] = $last_four_digits;

        return $this;
    }

    /**
     * Gets subscription_price
     *
     * @return float|null
     */
    public function getSubscriptionPrice()
    {
        return $this->container['subscription_price'];
    }

    /**
     * Sets subscription_price
     *
     * @param float|null $subscription_price subscription_price
     *
     * @return self
     */
    public function setSubscriptionPrice($subscription_price)
    {
        $this->container['subscription_price'] = $subscription_price;

        return $this;
    }

    /**
     * Gets billing_info
     *
     * @return \OpenAPI\Client\Model\BillingInfo|null
     */
    public function getBillingInfo()
    {
        return $this->container['billing_info'];
    }

    /**
     * Sets billing_info
     *
     * @param \OpenAPI\Client\Model\BillingInfo|null $billing_info billing_info
     *
     * @return self
     */
    public function setBillingInfo($billing_info)
    {
        $this->container['billing_info'] = $billing_info;

        return $this;
    }

    /**
     * Gets account_id
     *
     * @return string|null
     */
    public function getAccountId()
    {
        return $this->container['account_id'];
    }

    /**
     * Sets account_id
     *
     * @param string|null $account_id account_id
     *
     * @return self
     */
    public function setAccountId($account_id)
    {
        $this->container['account_id'] = $account_id;

        return $this;
    }

    /**
     * Gets end_date
     *
     * @return string|null
     */
    public function getEndDate()
    {
        return $this->container['end_date'];
    }

    /**
     * Sets end_date
     *
     * @param string|null $end_date ISO timestamp
     *
     * @return self
     */
    public function setEndDate($end_date)
    {
        $this->container['end_date'] = $end_date;

        return $this;
    }

    /**
     * Gets contact_info
     *
     * @return \OpenAPI\Client\Model\ContactInfo|null
     */
    public function getContactInfo()
    {
        return $this->container['contact_info'];
    }

    /**
     * Sets contact_info
     *
     * @param \OpenAPI\Client\Model\ContactInfo|null $contact_info contact_info
     *
     * @return self
     */
    public function setContactInfo($contact_info)
    {
        $this->container['contact_info'] = $contact_info;

        return $this;
    }

    /**
     * Gets account_num
     *
     * @return string|null
     */
    public function getAccountNum()
    {
        return $this->container['account_num'];
    }

    /**
     * Sets account_num
     *
     * @param string|null $account_num account_num
     *
     * @return self
     */
    public function setAccountNum($account_num)
    {
        $this->container['account_num'] = $account_num;

        return $this;
    }

    /**
     * Gets card_type
     *
     * @return string|null
     */
    public function getCardType()
    {
        return $this->container['card_type'];
    }

    /**
     * Sets card_type
     *
     * @param string|null $card_type card_type
     *
     * @return self
     */
    public function setCardType($card_type)
    {
        $this->container['card_type'] = $card_type;

        return $this;
    }

    /**
     * Gets subscription_status
     *
     * @return string|null
     */
    public function getSubscriptionStatus()
    {
        return $this->container['subscription_status'];
    }

    /**
     * Sets subscription_status
     *
     * @param string|null $subscription_status subscription_status
     *
     * @return self
     */
    public function setSubscriptionStatus($subscription_status)
    {
        $this->container['subscription_status'] = $subscription_status;

        return $this;
    }

    /**
     * Gets renewal_date
     *
     * @return string|null
     */
    public function getRenewalDate()
    {
        return $this->container['renewal_date'];
    }

    /**
     * Sets renewal_date
     *
     * @param string|null $renewal_date ISO timestamp
     *
     * @return self
     */
    public function setRenewalDate($renewal_date)
    {
        $this->container['renewal_date'] = $renewal_date;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


